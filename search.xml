<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[用docker-compose搭建mysql主从备份]]></title>
      <url>/2018/01/24/%E7%94%A8docker%E6%90%AD%E5%BB%BAmysql%E4%B8%BB%E4%BB%8E%E5%A4%87%E4%BB%BD/</url>
      <content type="html"><![CDATA[<h3 id="1-版本工具"><a href="#1-版本工具" class="headerlink" title="1.版本工具"></a>1.版本工具</h3><blockquote>
<p>centos 7<br>docker 17.09<br>mysql 5.7<br>docker-compose 1.18</p>
</blockquote>
<p>这篇博客记录在一台宿主机上通过docker-compose创建2个mysql镜像，实现主从备份复制。docker-compose安装点击<a href="https://docs.docker.com/compose/install/#install-compose" target="_blank" rel="noopener">这里</a>看docker网站的文档,或者进入他的<a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">github网址</a>,点击released选择最新的版本，推荐最新的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装命令</span><br><span class="line">pip install docker-compose</span><br><span class="line">#或者</span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.19.0-rc1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></p>
<h3 id="2-开始动手"><a href="#2-开始动手" class="headerlink" title="2.开始动手"></a>2.开始动手</h3><h5 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h5><p><img src="/images/用docker-compose搭建mysql主从备份-1.png" alt="“图片描述”"></p>
<h5 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h5><p><strong>docker-compose.yml</strong>文件用YAML语言编写，<code>严格缩进</code>，略坑。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;2&quot; #compose区分version1和version2，Version 2支持更多的指令</span><br><span class="line">services:</span><br><span class="line">  mysql-master: # 给容器命名</span><br><span class="line">    image: mysql # 指定启动镜像，docker images查看你的 msyql镜像名，额，当然镜像ID也行。</span><br><span class="line">    networks: #指定静态网络</span><br><span class="line">       mysql: #网络名字</span><br><span class="line">          ipv4_address: 192.168.210.21 #IP</span><br><span class="line">    container_name: msyql-master</span><br><span class="line">    privileged: true # 加权限</span><br><span class="line">    volumes: #文件挂载</span><br><span class="line">      - /etc/docker/mysql/master/conf/my.cnf:/etc/mysql/my.cnf</span><br><span class="line">      - /etc/docker/mysql/master/data/:/var/lib/mysql/</span><br><span class="line">    restart: always #重启方式</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_USER: suyu</span><br><span class="line">      MYSQL_PASSWORD: suyu.123</span><br><span class="line">    expose:</span><br><span class="line">      - 3306</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">  mysql-slave:</span><br><span class="line">    image: mysql</span><br><span class="line">    networks:</span><br><span class="line">       mysql:</span><br><span class="line">          ipv4_address: 192.168.210.22</span><br><span class="line">    container_name: msyql-slave</span><br><span class="line">    privileged: true</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/docker/mysql/slave/conf/my.cnf:/etc/mysql/my.cnf</span><br><span class="line">      - /etc/docker/mysql/slave/data/:/var/lib/mysql/</span><br><span class="line">    links: # mlave与master通讯</span><br><span class="line">      - msyql-master</span><br><span class="line">    restart: always</span><br><span class="line">    environment: #加入环境变量</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_USER: suyu</span><br><span class="line">      MYSQL_PASSWORD: suyu.123</span><br><span class="line">    ports:</span><br><span class="line">      - 3307:3307</span><br><span class="line">networks: # 定义网络</span><br><span class="line">  mysql: # 网络名</span><br><span class="line">    driver: bridge</span><br><span class="line">    ipam:</span><br><span class="line">      driver: default</span><br><span class="line">      config:</span><br><span class="line">      - subnet: 192.168.210.0/26</span><br></pre></td></tr></table></figure></p>
<p><strong>Dockerfile</strong>是创建镜像的文件，我直接在<code>docker-compose.yml</code>中指定了<code>image</code>，就不需要<code>build</code>,一个<code>docker-compose.yml</code>文件中，<code>image</code>和<code>build</code>是不能同时存在的，要么指定<code>iamge</code>，要么编写<code>Dockerfile</code>，重新<code>build</code>，好，这里略过。</p>
<blockquote>
<p>如果指定的image不存在，那么docker就会尝试去pull一个下来。</p>
</blockquote>
<p><strong>volumes</strong>是<code>docker-compose</code>的文件挂载指定字段。格式如下：</p>
<blockquote>
<p>- 宿主机的目录: 容器的需要挂载的目录: 挂载模式（比如有：ro只读模式：rw读写模式）</p>
</blockquote>
<p>我现在需要把mysql镜像的<code>my.cnf</code>文件挂出来编辑，把他挂载到我宿主机的<code>/etc/docker/mysql/slave/conf</code>下的<code>my.cnf</code>中，然后我只要编辑我本地的my.cnf文件就可以了。</p>
<p><strong>network</strong>是定义网络的字段，在宿主机中<code>ifconfig</code>查看ip，用于划分子网。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">eno16777736: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.203.129  netmask 255.255.255.0  broadcast 192.168.203.255</span><br><span class="line">        inet6 fe80::20c:29ff:fec8:64e5  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:c8:64:e5  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 4622  bytes 2613411 (2.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2187  bytes 381149 (372.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></p>
<p>宿主机ip是192.168.203.129，我定义容器的静态ip也是在192.168.0.0网段，不然容易出现ip池异常等等一系列恶心的问题。</p>
<p>接下来是mysql的配置文件<code>my.cnf</code>，先列出<code>master</code>的配置文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port            = 3306</span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port            = 3306</span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">server-id=2</span><br><span class="line"></span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">key_buffer_size = 1024M</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line">table_open_cache = 512</span><br><span class="line">sort_buffer_size = 2M</span><br><span class="line">net_buffer_length = 8K</span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line">thread_cache_size = 8</span><br><span class="line">max_connections=1000</span><br><span class="line">query_cache_size= 128M</span><br><span class="line">innodb_buffer_pool_size=4096M</span><br><span class="line">slow-query-log=1</span><br><span class="line">long_query_time = 5</span><br><span class="line">slow-query-log-file=slow.log</span><br><span class="line">#default-character-set=utf8</span><br><span class="line">skip-name-resolve</span><br><span class="line">innodb_file_per_table</span><br><span class="line"></span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=mixed</span><br><span class="line">server-id = 1</span><br><span class="line">expire_logs_days = 1</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"># no-auto-rehash</span><br><span class="line">auto-rehash</span><br><span class="line"># Remove the next comment character if you are not familiar with SQL</span><br><span class="line">#safe-updates</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 20M</span><br><span class="line">sort_buffer_size = 20M</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure></p>
<p><code>slave</code>的配置文件跟<code>master</code>的类似，就一点<code>server-id = 2</code>，不一样，一个<code>mysql</code>主从集群中<code>server-id</code>不能有重复的。</p>
<h3 id="生成容器"><a href="#生成容器" class="headerlink" title="生成容器"></a>生成容器</h3><blockquote>
<p>docker-compose up -d</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line">Creating msyql-master ... done</span><br><span class="line">Creating msyql-slave ... done</span><br><span class="line">Creating msyql-slave ...</span><br></pre></td></tr></table></figure>
<p>然后查看容器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS                      PORTS                              NAMES</span><br><span class="line">cf42251d5d27        mysql                     &quot;docker-entrypoint...&quot;   14 seconds ago      Up 12 seconds               3306/tcp, 0.0.0.0:3307-&gt;3307/tcp   msyql-slave</span><br><span class="line">0a94a3b57312        mysql                     &quot;docker-entrypoint...&quot;   15 seconds ago      Up 13 seconds               0.0.0.0:3306-&gt;3306/tcp             msyql-master</span><br></pre></td></tr></table></figure></p>
<p>看看<code>slave</code>的ip：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker inspect cf42251d5d27 |grep IPA</span><br><span class="line">            &quot;SecondaryIPAddresses&quot;: null,</span><br><span class="line">            &quot;IPAddress&quot;: &quot;&quot;,</span><br><span class="line">                    &quot;IPAMConfig&quot;: &#123;</span><br><span class="line">                    &quot;IPAddress&quot;: &quot;192.168.210.22&quot;,</span><br></pre></td></tr></table></figure></p>
<p>看来容器貌似没有问题，接下来搭建主从。先进入<code>master</code>配置。</p>
<blockquote>
<p>docker exec -it 0a94a3b57312 /bin/bash<br><img src="/images/用docker-compose搭建mysql主从备份-5.png" alt="“图片描述”"><br>创建<code>slave</code>账户<code>mysql&gt; create user slave;</code></p>
<p>授权 GRANT REPLICATION SLAVE ON <em>.</em> TO ‘repl’@’%’ IDENTIFIED BY ‘slave’;</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000003 |      636 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>接下来修改<code>slave</code>,同理登录<code>mysql-slave</code>:</p>
<blockquote>
<p>docker exec -it cf42251d5d27 /bin/bash</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=&apos;mysql-master&apos;,master_port=3306,master_user=&apos;slave&apos;,master_password=&apos;slave&apos;,master_log_file=&apos;mysql-bin.000003&apos;,master_log_pos=920;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>mysql&gt; start slave<br><img src="/images/用docker-compose搭建mysql主从备份-2.png" alt="“图片描述”"><br>显示正常，这时候在<code>master</code>上随便改动点什么，看<code>slave</code>会不会跟着变化。</p>
</blockquote>
<p><img src="/images/用docker-compose搭建mysql主从备份-3.png" alt="“图片描述”"><br>上<code>slave</code>上面看看：<br><img src="/images/用docker-compose搭建mysql主从备份-4.png" alt="“图片描述”"><br>大功告成……睡觉。</p>
]]></content>
      
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ansible踩坑札记]]></title>
      <url>/2018/01/18/ansible%E8%B8%A9%E5%9D%91%E6%9C%AD%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="版本工具"><a href="#版本工具" class="headerlink" title="版本工具"></a>版本工具</h3><ul>
<li style="list-style: none"><input type="checkbox" checked> Centos7</li>
<li style="list-style: none"><input type="checkbox" checked> Ansible2.4.2</li>
<li style="list-style: none"><input type="checkbox" checked> Python2.7</li>
<li style="list-style: none"><input type="checkbox" checked> docker</li>
</ul>
<h3 id="主机分配"><a href="#主机分配" class="headerlink" title="主机分配"></a>主机分配</h3><blockquote>
<p>server: 192.168.203.129<br>client: 172.17.0.3（docker虚拟镜像，centos6.9版本）</p>
</blockquote>
<h3 id="Ansible安装"><a href="#Ansible安装" class="headerlink" title="Ansible安装"></a>Ansible安装</h3><p>基础件安装：</p>
<blockquote>
<ul>
<li>pip install setuptools PyYAML Jinja2 paramiko simplejson</li>
</ul>
</blockquote>
<p>ansible安装：</p>
<blockquote>
<ul>
<li>pip install ansible</li>
</ul>
</blockquote>
<p>安装好之后，查看下ansible的版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost]# ansible --version</span><br><span class="line">ansible 2.4.2.0</span><br><span class="line">  config file = None</span><br><span class="line">  configured module search path = [u&apos;/root/.ansible/plugins/modules&apos;, u&apos;/usr/share/ansible/plugins/modules&apos;]</span><br><span class="line">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 2.7.5 (default, Nov 20 2015, 02:00:19) [GCC 4.8.5 20150623 (Red Hat 4.8.5-4)]</span><br></pre></td></tr></table></figure></p>
<h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><p>ansible是需要ssh登录客户端,服务端和客户端都需要安装ssh,别忘记要启动</p>
<blockquote>
<ul>
<li>yum -y install openssh-server openssh-clients</li>
<li>/etc/init.d/sshd start</li>
</ul>
</blockquote>
<p>在<code>master</code>上生成秘钥</p>
<blockquote>
<ul>
<li>ssh-keygen</li>
</ul>
</blockquote>
<p>然后一路回车，在<code>/root/.ssh</code>处查看密钥，修改<code>client</code>的root密码，然后将生产的密钥<code>ssh-copy-id</code>到<code>client</code>。</p>
<blockquote>
<ul>
<li>ssh-copy-id -i ~/.ssh/id_rsa.pub root@172.17.0.3</li>
</ul>
</blockquote>
<p>提示输入<code>client</code>的root密码，成功后可以测试登录</p>
<blockquote>
<ul>
<li>ssh root@172.17.0.3</li>
</ul>
</blockquote>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>到这一步算是安装完毕，现在开始修改配置文件。在<code>/etc/</code>目录下创建<code>ansible</code>目录，创建ansible.cfg文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/ansible ᐅ vim ansible.cfg</span><br><span class="line">[defaults]</span><br><span class="line">hostfile=/etc/ansible/hosts</span><br><span class="line">private_key_file = /root/.ssh/id_rsa</span><br><span class="line">remote_user = root</span><br><span class="line">remote_port = 22</span><br><span class="line">host_key_checking = False</span><br></pre></td></tr></table></figure></p>
<p>创建hosts文件，用于存储客户端ip和分组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/ansible ᐅ vim hosts</span><br><span class="line">172.17.0.3</span><br></pre></td></tr></table></figure></p>
<p>修改好后，就可以测试ansible了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ansible]# ansible &apos;172.17.0.3&apos; -m ping</span><br><span class="line">172.17.0.3 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2018/01/18/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
